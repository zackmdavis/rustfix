{
  "message": "cannot find type `Display` in this scope",
  "code": {
    "code": "E0412",
    "explanation": "\nThe type name used is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
  },
  "level": "error",
  "spans": [
    {
      "file_name": "./tests/everything/skip-multi-option-lints.rs",
      "byte_start": 64,
      "byte_end": 71,
      "line_start": 3,
      "line_end": 3,
      "column_start": 13,
      "column_end": 20,
      "is_primary": true,
      "text": [
        {
          "text": "    let d: &Display = &xs;",
          "highlight_start": 13,
          "highlight_end": 20
        }
      ],
      "label": "not found in this scope",
      "suggested_replacement": null,
      "expansion": null
    }
  ],
  "children": [
    {
      "message": "possible candidates are found in other modules, you can import them into scope",
      "code": null,
      "level": "help",
      "spans": [
        {
          "file_name": "./tests/everything/skip-multi-option-lints.rs",
          "byte_start": 0,
          "byte_end": 0,
          "line_start": 1,
          "line_end": 1,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::fmt::Display;\n\n",
          "suggestion_applicability": "Unspecified",
          "expansion": null
        },
        {
          "file_name": "./tests/everything/skip-multi-option-lints.rs",
          "byte_start": 0,
          "byte_end": 0,
          "line_start": 1,
          "line_end": 1,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::path::Display;\n\n",
          "suggestion_applicability": "Unspecified",
          "expansion": null
        }
      ],
      "children": [],
      "rendered": null
    }
  ],
  "rendered": "error[E0412]: cannot find type `Display` in this scope\n --> ./tests/everything/skip-multi-option-lints.rs:3:13\n  |\n3 |     let d: &Display = &xs;\n  |             ^^^^^^^ not found in this scope\nhelp: possible candidates are found in other modules, you can import them into scope\n  |\n1 | use std::fmt::Display;\n  |\n1 | use std::path::Display;\n  |\n\n"
}
{
  "message": "aborting due to previous error",
  "code": null,
  "level": "error",
  "spans": [],
  "children": [],
  "rendered": "error: aborting due to previous error\n\n"
}
{
  "message": "For more information about this error, try `rustc --explain E0412`.",
  "code": null,
  "level": "",
  "spans": [],
  "children": [],
  "rendered": "For more information about this error, try `rustc --explain E0412`.\n"
}
